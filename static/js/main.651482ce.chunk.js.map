{"version":3,"sources":["login.js","Add.js","time.js","Avatar.js","article.js","apiClient.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","state","disabled","e","preventDefault","this","setState","client","login","target","username","value","password","then","response","loggedIn","data","token","catch","alert","Navbar","bg","variant","fixed","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Row","Col","md","onSubmit","submitHandler","Form","Control","type","name","placeholder","class","React","Component","Add","onClick","toastr","options","closeButton","debug","extendedTimeOut","hideDuration","hideEasing","hideMethod","newestOnTop","onclick","positionClass","preventDuplicates","progressBar","showDuration","showEasing","showMethod","timeOut","clear","setTimeout","success","result","currentAd","updateAd","_id","title","Date","description","markdown","console","log","addAd","document","getElementById","reset","refreshList","Group","Label","defaultValue","as","rows","href","App","curDate","toLocaleDateString","useStyles","makeStyles","theme","blue","color","palette","getContrastText","backgroundColor","LetterAvatars","classes","Avatar","Article","ads","undefined","getAds","removeAd","ad","map","current","key","Card","CardHeader","avatar","subheader","Accordion","span","offset","Button","eventKey","removeAdvert","updateAdvert","to","Body","Text","path","Container","exact","buildrows","url","ApiClient","tokenProvider","logoutHandler","axios","method","headers","authorization","error","status","Promise","reject","autheticatedCall","window","localStorage","getItem","logout","setItem","removeItem","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.651482ce.chunk.js","sourcesContent":["import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      disabled: false\r\n    }\r\n  }\r\n\r\n  submitHandler(e) {\r\n    e.preventDefault()\r\n    this.setState({ disabled: true })\r\n    this.props.client.login(e.target.username.value, e.target.password.value)\r\n      .then((response) => {\r\n        this.setState({ disabled: false })\r\n        this.props.loggedIn(response.data.token)\r\n      })\r\n      .catch(() => {\r\n        alert(\"an error occured, please try again\");\r\n        this.setState({ disabled: false })\r\n      })\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <>\r\n <Navbar   bg=\"primary\" variant=\"dark\" fixed=\"top\"  expand=\"md\">\r\n  <Navbar.Brand>BlogApp</Navbar.Brand>\r\n \r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n    <Nav className=\"mr-auto\">\r\n   \r\n      \r\n    </Nav>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n<Row className=\"home\">\r\n    <Col md={3}>\r\n   \r\n\r\n\r\n    </Col>\r\n    <Col md={6}><br />\r\n       <h1 className='header3'>Login</h1> <br />\r\n        <form onSubmit={(e) => this.submitHandler(e)} >\r\n       <h4>Username</h4>  \r\n          <Form.Control type=\"text\" name=\"username\" placeholder=\"Enter you name\" disabled={this.state.disabled} /><br />\r\n      <h4>Password</h4>\r\n          <Form.Control type=\"password\" name=\"password\"  placeholder=\"Password\" disabled={this.state.disabled} /><br /><br />\r\n          <button  class=\"btn btn-primary\" type=\"submit\" disabled={this.state.disabled}> Submit </button>\r\n        </form>\r\n        </Col>\r\n        <Col md={3}></Col>\r\n        </Row>\r\n\r\n      </>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './App.css';\r\nimport toastr from 'toastr';\r\nimport 'toastr/build/toastr.min.css';\r\n\r\n\r\n\r\n\r\n\r\nclass Add extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      disabled: false,\r\n      \r\n    }\r\n  \r\n   \r\n  }\r\n \r\n  onClick = () => {\r\n    \r\n    toastr.options = {\r\n      closeButton: true,\r\n      debug: false,\r\n      extendedTimeOut: \"1000\",\r\n      hideDuration: \"1000\",\r\n      hideEasing: \"linear\",\r\n      hideMethod: \"fadeOut\",\r\n      newestOnTop: false,\r\n      onclick: null,\r\n      positionClass: \"toast-top-full-width\",\r\n      preventDuplicates: true,\r\n      progressBar: true,\r\n      showDuration: \"300\",\r\n      showEasing: \"swing\",\r\n      showMethod: \"fadeIn\",\r\n      timeOut: \"5000\",\r\n    }\r\n    toastr.clear()\r\n    setTimeout(() => toastr.success(`post added`))\r\n    \r\n  }\r\n  submitHandler(e) {\r\n    e.preventDefault()\r\n\r\n    this.setState({ disabled: true })\r\n    \r\n    let result\r\n    if (this.props.currentAd) {\r\n      result = this.props.client.updateAd(this.props.currentAd._id ,e.target.title.value, e.target.Date.value,e.target.description.value,e.target.markdown.value)\r\n      console.log( result)\r\n    } else {\r\n      result = this.props.client.addAd(e.target.title.value, e.target.Date.value, e.target.description.value, e.target.markdown.value)\r\n    }\r\n    console.log(result)\r\n    result.then(() => {\r\n      this.setState({ disabled: false })\r\n   \r\n      document.getElementById(\"addForm\").reset()\r\n      this.props.refreshList()\r\n    \r\n    })\r\n      .catch(() => {\r\n        console.log(\"catch\")\r\n        alert(\"an error occured, please try again\");\r\n        this.setState({ disabled: false })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <>\r\n  {this.props.currentAd ?  <h1 className='header' > Eidt Article</h1> : <h1  className='header'>New Article</h1>}\r\n   \r\n\r\n\r\n        <Form className='Container' onSubmit={(e) => this.submitHandler(e)} id=\"addForm\" >\r\n    \r\n        <Form.Group >\r\n                <Form.Label>Topic title </Form.Label>\r\n            <Form.Control  type=\"text\"   defaultValue={this.props.currentAd?.title} name=\"title\" disabled={this.state.disabled} /><br />\r\n            </Form.Group>\r\n            <Form.Label> Date </Form.Label>\r\n          <Form.Control  type=\"text\" defaultValue={this.props.currentAd?.Date} name=\"Date\" disabled={this.state.disabled} /><br />\r\n          Description\r\n          <Form.Control   as=\"textarea\" rows={5}type=\"text\" defaultValue={this.props.currentAd?.description} name=\"description\" disabled={this.state.disabled} /><br />\r\n         \r\n          Markdown\r\n          <Form.Control  as=\"textarea\" rows={3} type=\"text\" defaultValue={this.props.currentAd?.markdown} name=\"markdown\" disabled={this.state.disabled} /><br />\r\n          <a href=\"/\" class=\"btn btn-secondary\">Cancel</a>{' '}\r\n          <button  onClick={this.onClick} type=\"submit\" disabled={this.state.disabled}  class=\"btn btn-primary\" > Save  </button>\r\n         <br/><br/><br/>\r\n        \r\n        </Form>\r\n    \r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Add;\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  state={\r\n    curDate : new Date().toLocaleDateString(),\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <p> {this.state.curDate}</p>\r\n \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { blue } from '@material-ui/core/colors';\r\nconst useStyles = makeStyles((theme) => ({\r\n    blue: {\r\n        color: theme.palette.getContrastText(blue[500]),\r\n        backgroundColor: blue[500],\r\n    },\r\n}));\r\n\r\nexport default function LetterAvatars() {\r\n    const classes = useStyles();\r\n\r\n    return ( < Avatar className = { classes.blue } > App </Avatar>\r\n\r\n    );\r\n}","import React from 'react';\r\nimport Add from \"./Add\";\r\nimport App from \"./time\";\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport './App.css';\r\nimport Col from 'react-bootstrap/Col';\r\nimport LetterAvatars from './Avatar'\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nclass Article extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      ads: [],\r\n      currentAd: undefined\r\n    }\r\n    \r\n  }\r\n\r\n  refreshList(){\r\n    \r\n    this.props.client.getAds()\r\n    .then((response) => this.setState({ ads: response.data } ))\r\n   \r\n    \r\n  }\r\n\r\n  removeAdvert(id){\r\n    this.props.client.removeAd(id)\r\n    .then(this.refreshList())\r\n    \r\n  }\r\n\r\n  updateAdvert(ad){\r\n    this.setState({currentAd: ad})\r\n   \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshList()\r\n\r\n  }\r\n\r\n  buildrows() {\r\n \r\n    return this.state.ads.map((current) => {\r\n      return ( <div key={current._id}>\r\n          <Card className=\"root\"> \r\n    <CardHeader\r\n         avatar={<LetterAvatars/>}\r\n         title=  {current.markdown} \r\n         subheader={<App/>} />\r\n            <Accordion>\r\n       <Card>\r\n       <Row>\r\n               <Col md={5}>\r\n            \r\n               </Col>  \r\n               <Col md={{ span: 3, offset: 3}}>\r\n                  <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                  <button className=\"btn btn-primary\"  > see more</button>{'   '}\r\n                  <button className=\"btn btn-danger\"  onClick={()=> this.removeAdvert(current._id)}> Delete</button>{'  '}\r\n                  <button  className=\"btn btn-info\"  onClick={()=> this.updateAdvert(current)}> <Link  className='color' to=\"/add\" >Edit</Link></button>\r\n            </Accordion.Toggle>  </Col>\r\n        </Row>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n\r\n          <Card.Body>\r\n            <Card.Text><b>{current.title}:</b> </Card.Text>\r\n            <Card.Text>{current.Date}</Card.Text>\r\n            <Card.Text></Card.Text>\r\n            {current.description}\r\n       \r\n           </Card.Body>\r\n         </Accordion.Collapse>\r\n         </Card>\r\n          </Accordion>\r\n         \r\n   </Card>\r\n       \r\n        \r\n        </div>)\r\n    })\r\n    \r\n  }\r\n\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <>\r\n         <Router>\r\n         <Navbar   bg=\"primary\" variant=\"dark\" fixed=\"top\"  expand=\"md\">\r\n  <Navbar.Brand>BlogApp</Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n    <Nav className=\"mr-auto\">\r\n      <Link className=\"nav-link\" to=\"/\" >View</Link>\r\n      <Link className=\"nav-link\" to=\"/add\" >Add</Link>\r\n      \r\n      \r\n    </Nav>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n        <Route  path=\"/add\"  >\r\n           <Container>\r\n            <br /><br />\r\n            <Add client={this.props.client} refreshList={() => {\r\n            this.refreshList()\r\n            this.setState({\r\n            currentAd: undefined})\r\n            }} \r\n             currentAd={this.state.currentAd}/>\r\n           \r\n          </Container>\r\n        </Route>\r\n        <Route   exact path=\"/\"  >\r\n          <Container>\r\n            <h1 className='header'>Blog Articles</h1><br></br>\r\n            <Button  variant=\"success\"   ><Link className=\"btn btn-success\"  to=\"/add\" >New Article</Link></Button>\r\n          </Container>\r\n          <Container>\r\n            {this.buildrows()}\r\n          \r\n          </Container>\r\n    \r\n          \r\n        </Route>\r\n\r\n    </Router>\r\n\r\n    \r\n      </>\r\n    )\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Article;\r\n","import axios from 'axios'\r\n//const url = 'http://localhost:3004/'\r\n\r\nconst url = 'https://blog-ap-1.herokuapp.com/'\r\n\r\nexport class ApiClient {\r\n    constructor(tokenProvider, logoutHandler) {\r\n        this.tokenProvider = tokenProvider\r\n        this.logoutHandler = logoutHandler\r\n    }\r\n\r\n    async login(username, password) {\r\n        return await axios({\r\n            method: 'post',\r\n            url: `${url}auth`,\r\n            data: {\r\n                username,\r\n                password\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    autheticatedCall(method, url, data) {\r\n        return axios({\r\n                method,\r\n                url,\r\n                headers: {\r\n                    authorization: this.tokenProvider()\r\n                },\r\n                data\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.status === 403) {\r\n                    this.logoutHandler();\r\n                    return Promise.reject()\r\n                } else {\r\n                    throw error;\r\n                }\r\n            })\r\n    }\r\n\r\n    getAds() {\r\n        return this.autheticatedCall('get', url)\r\n\r\n    }\r\n\r\n    addAd(title, Date, description,markdown) {\r\n        return this.autheticatedCall('post', url, { title, Date, description,markdown})\r\n    }\r\n\r\n    removeAd(id) {\r\n        return this.autheticatedCall('delete', `${url}${id}`)\r\n    }\r\n\r\n    updateAd(id, title, Date, description,markdown) {\r\n        return this.autheticatedCall('put', `${url}${id}`, { title, Date, description,markdown })\r\n    }\r\n\r\n}","import React from 'react';\nimport Login from './login'\n\nimport Article from \"./article\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport { ApiClient } from './apiClient';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      token: window.localStorage.getItem(\"token\")\n    }\n    this.client = new ApiClient(() => this.state.token, () => this.logout())\n  }\n\n  login(token) {\n    window.localStorage.setItem(\"token\", token)\n    this.setState({ token })\n  }\n  \n  logout() {\n    window.localStorage.removeItem(\"token\")\n    this.setState({ token: undefined })\n  }\n\n  render() {\n    if (this.state.token) {\n      return <Article client={this.client}/>\n    }\n    return <Login loggedIn={(token) => this.login(token)} client={this.client}/>\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}